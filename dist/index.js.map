{"version":3,"sources":["reducers.js","store.js","components/List.js","components/Layout.js","components/Main.js","index.js"],"names":["reducer","getType","stat","isDirectory","isSymbolicLink","getSize","type","path","fs","statSync","size","getStats","createReducer","initialState","handlers","state","action","hasOwnProperty","readDir","content","promises","readdir","then","dir","Promise","all","map","p","lstat","catch","_","dirs","files","reduce","x","concat","sort","length","e","code","readFile","maybeBinary","file","encoding","getContents","key","getCurrentPath","currentPath","getParentPath","parentPath","getChildPath","selected","childPath","getPath","open","app","res","rej","c","stdio","env","process","on","openFile","filePath","stdin","pause","resume","init","initSuccess","initFailure","getContentsSuccess","getContentsFailure","selectItem","goBack","goForward","openFileSuccess","openFileFailure","searchElement","runGetContents","args","Cmd","run","successActionCreator","failActionCreator","currentSelected","childSelected","parentContent","currentContent","childContent","history","settings","colors","selection","directory","symlink","INIT","s","payload","list","sequence","INIT_SUCCESS","GET_CONTENTS_SUCCESS","parentSelected","findIndex","SELECT_ITEM","SEARCH_ELEMENT","query","toLocaleLowerCase","indexOf","GO_BACK","GO_FORWARD","Array","isArray","store","rootReducer","middleware","enhancers","List","calculateListWindow","items","viewSize","selectedItem","nextWindow","slice","props","onSelect","ItemComponent","marginTop","setState","timesPressed","press","t","setTimeout","clearTimeout","input","shift","downArrow","upArrow","item","i","value","label","defaultProps","propTypes","PropTypes","oneOfType","arrayOf","object","string","isRequired","number","func","Pane","React","forwardRef","ref","children","onChange","updateQuery","onSubmit","toggleStatusBar","StatusBar","isActive","command","dispatch","v","Layout","onMoveLeft","onMoveRight","exit","statusBarIsActive","statusCommand","setStatusCommand","rightArrow","return","leftArrow","element","bool","node","Main","formatBytes","bytes","decimals","k","dm","Math","max","floor","log","parseFloat","toFixed","toString","getLabel","isFocused","w","maybeFs","extraSpace","spaceLength","fill","join","getColor","mapModel","Renderer","limit","selector","data","Text","isSelected","r1","r2","r3","w1","w2","w3","setWidth","columns","rows","r","current","width","cwd"],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["import {createAction} from \"@reduxjs/toolkit\"\nimport {loop, Cmd} from \"redux-loop\"\nimport fs from \"fs\"\nimport {spawn} from \"child_process\"\nimport {basename, resolve, dirname} from \"path\"\nimport {isBinary} from \"istextorbinary\"\n\nconst getType = stat => {\n  if (stat.isDirectory()) {\n    return \"directory\"\n  }\n\n  if (stat.isSymbolicLink()) {\n    return \"symlink\"\n  }\n\n  return \"file\"\n}\n\nconst getSize = (stat, type, path) => {\n  if (type === \"directory\") {\n    // TODO: calc dir size\n    return \"\"\n  }\n\n  if (type === \"symlink\") {\n    return fs.statSync(path).size\n  }\n\n  return stat.size\n}\n\nconst getStats = (stat, path) => {\n  const type = getType(stat)\n\n  return {\n    type,\n    size: getSize(stat, type, path),\n  }\n}\n\nfunction createReducer(initialState, handlers) {\n  return function reducer(state = initialState, action) {\n    // eslint-disable-next-line\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action)\n    }\n\n    return state\n  }\n}\n\nconst readDir = async path => {\n  try {\n    const content = await fs.promises.readdir(path)\n      .then(dir => Promise.all(dir.map(p => fs.promises.lstat(`${path}/${p}`).then(stat => ({\n        content: p,\n        ...getStats(stat, `${path}/${p}`),\n      })).catch(_ => ({content: p, type: \"file\", size: 0})))))\n      .then(dir => {\n        const {dirs, files} = dir.reduce(({dirs, files}, x) => {\n          if (x.type === \"directory\") {\n            return {files, dirs: dirs.concat(x)}\n          }\n\n          return {dirs, files: files.concat(x)}\n        }, {dirs: [], files: []})\n\n        return dirs.sort().concat(files.sort())\n      })\n\n    if (content.length === 0) {\n      return {type: \"directory\", content: \"(Empty)\", size: \"\"}\n    }\n\n    return {type: \"directory\", content, size: \"\"}\n  } catch (e) {\n    if (e.code === \"EACCES\") {\n      return {type: \"directory\", content: \"(Not Accessible)\", size: \"\"}\n    }\n\n    throw e\n  }\n}\n\nconst readFile = async (path, stat) => {\n  try {\n    const maybeBinary = isBinary(path)\n    if (maybeBinary) {\n      return {type: \"file\", content: \"(Binary)\", size: stat.size}\n    }\n\n    if (maybeBinary == null) {\n      return {type: \"file\", content: \"(Not Accessible)\", size: 0}\n    }\n\n    const file = await fs.promises.readFile(path, {encoding: \"utf8\"})\n\n    if (file.length === 0) {\n      return {type: \"file\", content: \"(Empty)\", size: 0}\n    }\n\n    return {type: \"file\", content: file, size: stat.size}\n  } catch (e) {\n    if (e.code === \"EACCES\") {\n      return {type: \"file\", content: \"(Not Accessible)\", size: 0}\n    }\n\n    throw e\n  }\n}\n\nexport const getContents = async ({path, key}) => {\n  const stat = await fs.promises.lstat(path).catch(_ => ({isDirectory: () => false, size: 0}))\n  const content = stat.isDirectory() ? await readDir(path) : await readFile(path, stat)\n\n  return {[key]: content}\n}\n\nconst getCurrentPath = path => ({currentPath: resolve(path)})\nexport const getParentPath = ({path}) => ({parentPath: dirname(resolve(path))})\nexport const getChildPath =\n  ({path, dir, selected}) => ({childPath: resolve(path, dir[selected].content)})\n\nexport const getPath = ({path, dir, selected}) => {\n  const [{currentPath}, {childPath}, {parentPath}] = [\n    getCurrentPath(path),\n    getChildPath({path, dir: dir.content, selected}),\n    getParentPath({path}),\n  ]\n\n  return {\n    currentPath,\n    parentPath,\n    childPath,\n  }\n}\n\nconst open = (app, path) => new Promise((res, rej) => {\n  const c = spawn(app, [path], {stdio: \"inherit\", env: process.env})\n  c.on(\"exit\", res)\n  c.on(\"error\", rej)\n})\n\nexport const openFile = async ({filePath}) => {\n  process.stdin.pause()\n\n  if (isBinary(filePath)) {\n    await open(\"xdg-open\", filePath)\n  } else {\n    await open(\"vim\", filePath)\n  }\n\n  process.stdin.resume()\n}\n\nexport const init = createAction(\"INIT\")\nexport const initSuccess = createAction(\"INIT_SUCCESS\")\nexport const initFailure = createAction(\"INIT_FAILURE\")\nexport const getContentsSuccess = createAction(\"GET_CONTENTS_SUCCESS\")\nexport const getContentsFailure = createAction(\"GET_CONTENTS_FAILURE\")\nexport const selectItem = createAction(\"SELECT_ITEM\")\nexport const goBack = createAction(\"GO_BACK\")\nexport const goForward = createAction(\"GO_FORWARD\")\nexport const openFileSuccess = createAction(\"OPEN_FILE_SUCCESS\")\nexport const openFileFailure = createAction(\"OPEN_FILE_FAILURE\")\nexport const searchElement = createAction(\"SEARCH_ELEMENT\")\n\nconst runGetContents = args => Cmd.run(getContents, {\n  successActionCreator: getContentsSuccess,\n  failActionCreator: getContentsFailure,\n  args,\n})\n\nconst initialState = {\n  currentSelected: 0,\n  childSelected: 0,\n  parentContent: {content: []},\n  currentContent: {content: []},\n  childContent: {content: []},\n  history: {},\n  settings: {\n    colors: {\n      selection: \"#57C7FF\",\n      directory: \"#57C7FF\",\n      file: \"#E2E4E5\",\n      symlink: \"#FF6AC1\",\n    },\n  },\n}\n\nconst reducer = createReducer(initialState, {\n  INIT: (s, {payload: {path}}) => loop(\n    {...s, currentPath: path},\n    Cmd.list([\n      runGetContents([{path, key: \"currentContent\"}]),\n      Cmd.action({type: \"INIT_SUCCESS\"})],\n    {sequence: true}),\n  ),\n  INIT_SUCCESS: s => {\n    const {\n      currentPath,\n      parentPath,\n      childPath,\n    } = getPath({path: s.currentPath, dir: s.currentContent, selected: s.currentSelected})\n\n    return loop({\n      ...s,\n      currentPath,\n      parentPath,\n      childPath,\n    }, Cmd.list([\n      runGetContents([{path: parentPath, key: \"parentContent\"}]),\n      runGetContents([{path: childPath, key: \"childContent\"}]),\n    ]))\n  },\n  GET_CONTENTS_SUCCESS: (s, {payload}) => {\n    const {parentContent, currentContent, childContent} = payload\n\n    if (parentContent) {\n      return {\n        ...s,\n        parentContent,\n        parentSelected: parentContent.content.findIndex(\n          p => p.content === basename(s.currentPath),\n        ),\n      }\n    }\n\n    if (childContent) {\n      return {\n        ...s,\n        childContent,\n        childSelected: s.history[s.childPath] ? s.history[s.childPath].selected : 0,\n      }\n    }\n\n    return {...s, currentContent}\n  },\n  SELECT_ITEM: (s, {payload: {currentSelected}}) => {\n    const {childPath} = getPath({\n      path: s.currentPath,\n      dir: s.currentContent,\n      selected: currentSelected,\n    })\n\n    return loop({\n      ...s,\n      childPath,\n      currentSelected,\n    }, runGetContents([{path: childPath, key: \"childContent\"}]))\n  },\n  SEARCH_ELEMENT: (s, {payload: {query}}) => {\n    const currentSelected = s.currentContent.content.findIndex(\n      c => c.content.toLocaleLowerCase().indexOf(query) > -1,\n    )\n\n    if (currentSelected > -1) {\n      return loop(s, Cmd.action({type: \"SELECT_ITEM\", payload: {currentSelected}}))\n    }\n\n    return s\n  },\n\n  GO_BACK: s => loop({\n    ...s,\n    currentPath: s.parentPath,\n    currentContent: s.parentContent,\n    currentSelected: s.parentSelected,\n    childPath: s.currentPath,\n    childContent: s.currentContent,\n    childSelected: s.currentSelected,\n    ...getParentPath({path: s.parentPath}),\n    history: {\n      ...s.history,\n      [s.parentPath]: {selected: s.parentSelected},\n      [s.currentPath]: {selected: s.currentSelected},\n      [s.childPath]: {selected: s.childSelected},\n    },\n  }, runGetContents([{\n    path: getParentPath({path: s.parentPath}).parentPath,\n    key: \"parentContent\"}])),\n  GO_FORWARD: s => {\n    const isDirectory = s.childContent.type === \"directory\"\n\n    if (isDirectory) {\n      if (!Array.isArray(s.childContent.content)) {\n        return s\n      }\n\n      const {childPath} = getPath({\n        path: s.childPath,\n        dir: s.childContent,\n        selected: s.childSelected,\n      })\n\n      return loop({\n        ...s,\n        currentPath: s.childPath,\n        currentContent: s.childContent,\n        currentSelected: s.childSelected,\n        parentPath: s.currentPath,\n        parentContent: s.currentContent,\n        parentSelected: s.currentSelected,\n        childPath,\n        history: {\n          ...s.history,\n          [s.parentPath]: {selected: s.parentSelected},\n          [s.currentPath]: {selected: s.currentSelected},\n          [s.childPath]: {selected: s.childSelected},\n        },\n      }, runGetContents([{path: childPath, key: \"childContent\"}]))\n    }\n\n    return loop(s, Cmd.run(openFile, {\n      successActionCreator: openFileSuccess,\n      failActionCreator: openFileFailure,\n      args: [{filePath: s.childPath}],\n    }))\n  },\n})\n\nexport default reducer\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\"\nimport {install} from \"redux-loop\"\n\nimport rootReducer from \"./reducers\"\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware(),\n  enhancers: [install()],\n})\n\nexport default store\n","import React, {useEffect, useState} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Box, useInput} from \"ink\"\n\nconst calculateListWindow = (items, viewSize, selectedItem) => {\n  if (items.length <= viewSize) {\n    return {items, selected: selectedItem}\n  }\n\n  const nextWindow = (viewSize / 2) - ((viewSize / 2) % 1)\n\n  if (selectedItem + nextWindow >= items.length) {\n    return {items: items.slice(-viewSize), selected: viewSize - items.length + selectedItem}\n  }\n\n  if (selectedItem - nextWindow < 0) {\n    return {items: items.slice(0, viewSize), selected: selectedItem}\n  }\n\n  return {\n    items: items.slice(selectedItem - nextWindow, selectedItem + nextWindow),\n    selected: nextWindow,\n  }\n}\n\nconst List = props => {\n  const {\n    items,\n    viewSize,\n    onSelect,\n    selectedItem,\n    ItemComponent,\n    marginTop,\n  } = props\n\n  const [state, setState] = useState({items, selected: selectedItem})\n  const [timesPressed, press] = useState(0)\n\n  useEffect(() => {\n    const t = setTimeout(() => setState(\n      calculateListWindow(items, viewSize, selectedItem),\n    ), 0)\n\n    return () => clearTimeout(t)\n  }, [items])\n\n  useEffect(() => {\n    const t = setTimeout(() => press(0), 100)\n\n    return () => clearTimeout(t)\n  }, [timesPressed])\n\n  useInput((input, key) => {\n    if (input === \"G\" && key.shift) {\n      setState(calculateListWindow(items, viewSize, items[items.length - 1]))\n      onSelect(items[items.length - 1])\n    }\n\n    if (input === \"g\") {\n      const p = timesPressed + 1\n      press(p)\n\n      if (p > 1) {\n        setState(calculateListWindow(items, viewSize, selectedItem))\n        onSelect(items[0])\n      }\n    }\n\n    if (input === \"j\" || key.downArrow) {\n      if (state.selected !== state.items.length - 1) {\n        onSelect(state.items[state.selected + 1])\n      }\n    }\n\n    if (input === \"k\" || key.upArrow) {\n      if (state.selected !== 0) {\n        onSelect(state.items[state.selected - 1])\n      }\n    }\n  })\n\n  return (\n    <Box flexDirection=\"column\" marginTop={marginTop}>\n      {state.items.map((item, i) => (\n        <ItemComponent\n          key={item.value}\n          label={item.label}\n          value={item.value}\n          size={item.size}\n          type={item.type}\n          isSelected={state.selected === i}\n        />\n      ))}\n    </Box>\n  )\n}\n\nList.defaultProps = {\n  selectedItem: 0,\n  marginTop: 0,\n}\n\nList.propTypes = {\n  items: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object])),\n    PropTypes.string,\n  ]).isRequired,\n  viewSize: PropTypes.number.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  selectedItem: PropTypes.number,\n  ItemComponent: PropTypes.func.isRequired,\n  marginTop: PropTypes.number,\n}\n\nexport default List\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React, {useState} from \"react\"\nimport {useDispatch} from \"react-redux\"\nimport {Text, Box, useInput, useApp} from \"ink\"\nimport PropTypes from \"prop-types\"\nimport TextInput from \"ink-text-input\"\n\nimport {searchElement} from \"../reducers\"\n\nexport const Pane = React.forwardRef(({children, ...props}, ref) => (\n  <Box flexGrow={1} ref={ref} {...props}>\n    {children}\n  </Box>\n))\n\nconst onChange = ({action, updateQuery}) => query => {\n  action({query})\n  updateQuery(query)\n}\n\nconst onSubmit = ({toggleStatusBar, updateQuery}) => _ => {\n  toggleStatusBar(false)\n  updateQuery(\"\")\n}\n\nconst StatusBar = props => {\n  const {\n    isActive,\n    command,\n    toggleStatusBar,\n  } = props\n\n  const dispatch = useDispatch()\n  const [query, updateQuery] = useState(\"\")\n\n  if (isActive && command === \"search\") {\n    return (\n      <TextInput\n        value={query}\n        placeholder=\":search\"\n        onChange={onChange({action: v => dispatch(searchElement(v)), updateQuery})}\n        onSubmit={onSubmit({toggleStatusBar, updateQuery})}\n      />\n    )\n  }\n\n  return <Text> </Text>\n}\n\nexport const Layout = ({children, onMoveLeft, onMoveRight, ...props}) => {\n  const {exit} = useApp()\n  const [statusBarIsActive, toggleStatusBar] = useState(false)\n  const [statusCommand, setStatusCommand] = useState(\"\")\n\n  useInput((input, key) => {\n    if (!statusBarIsActive) {\n      if (input === \"q\") {\n        exit()\n      }\n\n      if (input === \"l\" || key.rightArrow || key.return) {\n        onMoveRight()\n      }\n\n      if (input === \"h\" || key.leftArrow) {\n        onMoveLeft()\n      }\n\n      if (input === \"/\") {\n        toggleStatusBar(true)\n        setStatusCommand(\"search\")\n      }\n    }\n  })\n\n  return (\n    <Box flexDirection=\"column\">\n      <Box flexDirection=\"row\" {...props}>\n        {children}\n      </Box>\n      <StatusBar\n        isActive={statusBarIsActive}\n        command={statusCommand}\n        toggleStatusBar={toggleStatusBar}\n      />\n    </Box>\n  )\n}\n\nPane.propTypes = {\n  children: PropTypes.element.isRequired,\n}\n\nStatusBar.propTypes = {\n  isActive: PropTypes.bool.isRequired,\n  command: PropTypes.string.isRequired,\n  toggleStatusBar: PropTypes.func.isRequired,\n}\n\nLayout.propTypes = {\n  onMoveLeft: PropTypes.func.isRequired,\n  onMoveRight: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n}\n","import React, {useState, useEffect, useRef} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {Text, measureElement} from \"ink\"\nimport useStdoutDimensions from \"ink-use-stdout-dimensions\"\nimport List from \"./List\"\n\nimport {Layout, Pane} from \"./Layout\"\nimport {selectItem, goBack, goForward} from \"../reducers\"\n\n// https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript\nconst formatBytes = (bytes, decimals = 1) => {\n  if (bytes === 0) {\n    return \"0\"\n  }\n\n  const k = 1024\n  const dm = Math.max(0, decimals)\n  const sizes = [\"B\", \"K\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\"]\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n  return `${parseFloat((bytes / k ** i).toFixed(dm))} ${sizes[i]}`\n}\n\nconst getSize = (type, size) => {\n  if (type === \"directory\") {\n    return size.toString()\n  }\n\n  if (type === \"symlink\") {\n    return `~> ${formatBytes(size)}`\n  }\n\n  return formatBytes(size)\n}\n\nconst getLabel = ({isFocused, label, type, size, w}) => {\n  const fs = getSize(type, size)\n  const maybeFs = isFocused ? fs : \"\"\n  const extraSpace = isFocused ? fs.length + 3 : 3\n  const spaceLength = w - label.length - extraSpace\n\n  return ` ${label}${Array(Math.max(0, spaceLength)).fill(\" \").join(\"\")}${maybeFs} `\n}\n\nconst getColor = ({colors, type}) => colors[type]\n\nconst mapModel = ({content, type}, path) => (\n  (type === \"directory\" && Array.isArray(content)) ?\n    content.map(({content, size, type}) => ({\n      size,\n      path,\n      type,\n      label: content,\n      value: `${path}/${content}`,\n    })) :\n    content\n)\n\nconst onSelect = (dispatch, content) => item => {\n  dispatch(selectItem({currentSelected: content.content.findIndex(\n    p => p.content === item.label,\n  )}))\n}\n\nconst Renderer = props => {\n  const {\n    limit,\n    w,\n    isFocused,\n    selector,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const {colors, selectedItem, content, path} = useSelector(s => ({\n    colors: s.settings.colors,\n    selectedItem: s[`${selector}Selected`],\n    content: s[`${selector}Content`],\n    path: s[`${selector}Path`],\n  }))\n\n  const data = mapModel(content, path)\n\n  if (Array.isArray(data)) {\n    return (\n      <List\n        marginTop={1}\n        viewSize={limit - 1}\n        selectedItem={selectedItem}\n        isFocused={isFocused}\n        items={data}\n        onSelect={selector === \"current\" ? onSelect(dispatch, content) : _ => _}\n        indicatorComponent={Text}\n        ItemComponent={({label, size, type, isSelected}) => (\n          <Text\n            bold={type === \"directory\"}\n            color={isSelected ? \"none\" : getColor({colors, type})}\n            backgroundColor={isSelected ? colors.selection : \"none\"}\n            wrap=\"truncate\"\n          >\n            {getLabel({isFocused, label, size, w, type})}\n          </Text>\n        )}\n      />\n    )\n  }\n\n  return <Text key={1}>{data}</Text>\n}\n\nconst Main = () => {\n  const [r1, r2, r3] = [useRef(), useRef(), useRef()]\n  const [[w1, w2, w3], setWidth] = useState([0, 0, 0])\n  const [columns, rows] = useStdoutDimensions()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    setWidth([r1, r2, r3].map(r => measureElement(r.current).width))\n  }, [columns])\n\n  const onMoveRight = () => {\n    dispatch(goForward())\n  }\n\n  const onMoveLeft = () => {\n    dispatch(goBack())\n  }\n\n  const limit = rows\n\n  return (\n    <Layout\n      height={limit}\n      onMoveLeft={onMoveLeft}\n      onMoveRight={onMoveRight}\n    >\n      <Pane ref={r1} key={0} width=\"10%\">\n        <Renderer\n          selector=\"parent\"\n          limit={limit}\n          w={w1}\n        />\n      </Pane>\n      <Pane ref={r2} key={1} width=\"40%\">\n        <Renderer\n          isFocused\n          selector=\"current\"\n          limit={limit}\n          w={w2}\n        />\n      </Pane>\n      <Pane ref={r3} key={2} width=\"50%\">\n        <Renderer\n          selector=\"child\"\n          limit={limit}\n          w={w3}\n        />\n      </Pane>\n    </Layout>\n  )\n}\n\nRenderer.defaultProps = {\n  w: 0,\n  isFocused: false,\n  limit: 20,\n}\n\nRenderer.propTypes = {\n  w: PropTypes.number,\n  limit: PropTypes.number,\n  isFocused: PropTypes.bool,\n  selector: PropTypes.string.isRequired,\n}\n\nexport default Main\n","import React from \"react\"\nimport {Provider} from \"react-redux\"\nimport {render} from \"ink\"\nimport process from \"process\"\nimport store from \"./store\"\nimport {init} from \"./reducers\"\nimport Main from \"./components/Main\"\n\nstore.dispatch(init({path: process.cwd()}))\n\nrender(<Provider store={store}><Main /></Provider>)\n"]}